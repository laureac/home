{"version":3,"sources":["components/Title.js","pages/About.js","pages/Contact.js","components/Header.js","App.js","pages/Home.js","serviceWorker.js","index.js"],"names":["Title","lineContent","lineContent2","line1","useRef","line2","useEffect","gsap","from","delay","ease","y","stagger","amount","className","ref","el","About","Contact","Header","to","exact","activeStyle","fontWeight","color","routes","path","name","Component","App","onEnter","node","children","firstElementChild","lastElementChild","opacity","onExit","map","key","match","CSSTransition","in","timeout","classNames","onEntering","unmountOnExit","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1aafe0fa.chunk.js","sourcesContent":["import React, {useRef, useEffect} from 'react';\r\nimport {gsap} from 'gsap';\r\n\r\nconst Title = ({ lineContent, lineContent2 }) => {\r\n    let line1 = useRef(null);\r\n    let line2 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        gsap.from([line1, line2], 0.8, {\r\n          delay: 0.8,\r\n          ease: \"power3.out\",\r\n          y: 64,\r\n          stagger: {\r\n            amount: 0.15\r\n          }\r\n        });\r\n      }, [line1, line2]);\r\n        return (\r\n            <h1 className='page-title'>\r\n            <div className='line-wrap'>\r\n              <div  ref={el => (line1 = el)} className='line'>\r\n              {lineContent}\r\n              </div>\r\n            </div>\r\n            <div className='line-wrap'>\r\n              <div ref={el => (line2 = el)} className='line'>\r\n              {lineContent2}\r\n              </div>\r\n            </div>\r\n          </h1>\r\n        );\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n    <div className='inner about'>\r\n        <Title \r\n        lineContent='Authentically Hand ' \r\n        lineContent2='Crafted By Artisans.'/>\r\n      <p className='other'>\r\n        Our unique homewares and lifestyle pieces are hand crafted by artisans, with the use of eco-friendly, natural materials. Our range of decor products and other homely essentials can be used in various situations to splash a bit of colour and uniqueness around the home.\r\n        Every piece, being individually crafted, is authentically created using artisan craftmanship that also empowers womenâ€™s cooperatives.</p>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;","import React from \"react\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <>\r\n    <div className='inner contact'>\r\n        <Title \r\n        lineContent='We Would Love' \r\n        lineContent2='To Hear From You' \r\n       />\r\n      <p className='other'>\r\n      We pride ourselves on being the coolest online hippie shop. When shopping with us you'll always get amazing service and awesome products at warehouse prices.\r\n      CALL US + 0400 000 000. <br></br>\r\n\r\n      JOIN THE JOURNEY for promotions, discounts.\r\n      </p>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className='header'>\r\n    <NavLink \r\n        to='/home' \r\n        exact \r\n        activeStyle={{\r\n          fontWeight: \"bold\",\r\n          color: \"green\"\r\n        }}\r\n    >\r\n        Home\r\n    </NavLink>\r\n    <NavLink\r\n        to='/about'\r\n        exact\r\n        activeStyle={{\r\n          fontWeight: \"bold\",\r\n          color: \"green\"\r\n        }}>\r\n        About\r\n    </NavLink>\r\n    <NavLink\r\n        to='/contact'\r\n        exact\r\n        activeStyle={{\r\n          fontWeight: \"bold\",\r\n          color: \"green\"\r\n        }}>\r\n        Contact\r\n    </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { gsap } from \"gsap\";\nimport \"./App.scss\";\n\nimport About from \"./pages/About\";\nimport Contact from \"./pages/Contact\";\nimport Header from \"./components/Header\";\nimport Home from \"./pages/Home\";\n\nconst routes = [\n  { path: \"/home\", name: \"Home\", Component: Home },\n  { path: \"/about\", name: \"About\", Component: About },\n  { path: \"/contact\", name: \"About\", Component: Contact }\n];\n\nfunction App() {\n  const onEnter = node => {\n    gsap.from(\n      [node.children[0].firstElementChild, node.children[0].lastElementChild],\n      0.6,\n      {\n        y: 30,\n        delay: 0.6,\n        ease: \"power3.InOut\",\n        opacity: 0,\n        stagger: {\n          amount: 0.6\n        }\n      }\n    );\n  };\n\n  const onExit = node => {\n    gsap.to(\n      [node.children[0].firstElementChild, node.children[0].lastElementChild],\n      0.6,\n      {\n        y: -30,\n        ease: \"power3.InOut\",\n        stagger: {\n          amount: 0.2\n        }\n      }\n    );\n  };\n\n  return (\n    <>\n      <Header />\n      <div className='container'>\n        {routes.map(({ path, Component }) => (\n          <Route key={path} exact path={path}>\n            {({ match }) => (\n              <CSSTransition\n                in={match != null}\n                timeout={1200}\n                classNames='page'\n                onExit={onExit}\n                onEntering={onEnter}\n                unmountOnExit>\n                <div className='page'>\n                  <Component />\n                </div>\n              </CSSTransition>\n            )}\n          </Route>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React, { useRef} from \"react\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst Home = () => {\r\n  let myRef = useRef(null)\r\n  const scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop);\r\n  const executeScroll = () => scrollToRef(myRef)\r\n  \r\n  return (\r\n    <>\r\n    <div className='inner home'>\r\n        <Title \r\n         lineContent='TRIBAL & BOHEMIAN'\r\n         lineContent2='Coastal Bohemian Chic'\r\n       />\r\n      <div>\r\n        <p className='other'>\r\n        Our passion is to design unique, fresh and timeless pieces, that add warmth, love and texture to your home. We offer a variety of small, medium and large size outdoor and indoor plants. Hopefully you can find something you fall in love!\r\n        </p>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}