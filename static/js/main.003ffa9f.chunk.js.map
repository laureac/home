{"version":3,"sources":["assets/event.JPG","assets/guitar.JPG","assets/tracker.JPG","assets/meditation.JPG","assets/jap.JPG","assets/github.JPG","components/Title.js","pages/Contact.js","components/Header.js","pages/projects/Projects.js","App.js","pages/Home.js","serviceWorker.js","index.js"],"names":["module","exports","Title","lineContent","lineContent2","line1","useRef","line2","useEffect","gsap","from","delay","ease","y","stagger","amount","className","ref","el","Contact","Header","to","exact","activeStyle","fontWeight","color","Projects","projects","id","text","img","jap","link","code","event","tracker","guitar","meditation","map","project","key","href","target","rel","src","alt","title","git","routes","path","name","Component","style","onClick","App","onEnter","node","children","firstElementChild","lastElementChild","opacity","onExit","match","CSSTransition","in","timeout","classNames","onEntering","unmountOnExit","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.003ffa9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/event.3465b949.JPG\";","module.exports = __webpack_public_path__ + \"static/media/guitar.c8c1df49.JPG\";","module.exports = __webpack_public_path__ + \"static/media/tracker.896b7af0.JPG\";","module.exports = __webpack_public_path__ + \"static/media/meditation.f43ca2dc.JPG\";","module.exports = __webpack_public_path__ + \"static/media/jap.dcbdf288.JPG\";","module.exports = __webpack_public_path__ + \"static/media/github.0b33bbe7.JPG\";","import React, {useRef, useEffect} from 'react';\r\nimport {gsap} from 'gsap';\r\n\r\nconst Title = ({ lineContent, lineContent2 }) => {\r\n    let line1 = useRef(null);\r\n    let line2 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        gsap.from([line1, line2], 0.8, {\r\n          delay: 0.8,\r\n          ease: \"power3.out\",\r\n          y: 64,\r\n          stagger: {\r\n            amount: 0.15\r\n          }\r\n        });\r\n      }, [line1, line2]);\r\n        return (\r\n            <h1 className='page-title'>\r\n            <div className='line-wrap'>\r\n              <div  ref={el => (line1 = el)} className='line'>\r\n              {lineContent}\r\n              </div>\r\n            </div>\r\n            <div className='line-wrap'>\r\n              <div ref={el => (line2 = el)} className='line'>\r\n              {lineContent2}\r\n              </div>\r\n            </div>\r\n          </h1>\r\n        );\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div className='inner'>\r\n        <Title \r\n        lineContent='Who I am and' \r\n        lineContent2='How I get things done'/>\r\n      <p className='other'>\r\n        Worked in marketing, learnt coding and illustration. employed entire been it find the more\r\n        and may the to his their five and towards in lay rippedup, what and so\r\n        endure before for her been decades the few to than would was concept.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className='header'>\r\n    <NavLink \r\n        to='/' \r\n        exact \r\n        activeStyle={{\r\n          fontWeight: \"bold\",\r\n          color: \"red\"\r\n        }}\r\n    >\r\n        Home\r\n    </NavLink>\r\n    <NavLink\r\n        to='/contact'\r\n        exact\r\n        activeStyle={{\r\n          fontWeight: \"bold\",\r\n          color: \"red\"\r\n        }}>\r\n        Contact\r\n    </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './projects.scss';\r\nimport event from '../../assets/event.JPG';\r\nimport guitar from '../../assets/guitar.JPG';\r\nimport tracker from '../../assets/tracker.JPG';\r\nimport meditation from '../../assets/meditation.JPG';\r\nimport jap from '../../assets/jap.JPG';\r\nimport git from '../../assets/github.JPG';\r\n\r\nfunction Projects (){\r\n    const projects = [{\r\n        id: 'Learn Japanese App',\r\n        text: 'Purpose: coding a design found on Dribbble. Find the link of the design here : https://dribbble.com/shots/6678558-Japanese-Courses-Landing-Page. For this, I screened shot the background and the icons, and intent to guess the rest (font, size, margin...)',\r\n        img: jap,\r\n        link: 'https://laureac.github.io/learn-japanese/',\r\n        code: 'https://github.com/laureac/learn-japanese'\r\n    },\r\n    {\r\n        id: 'Event Finder',\r\n        text: 'The project was done using the Foursquare API. The key point was to fetch, extract infos, render and style it.',\r\n        img: event,\r\n        link: 'https://laureac.github.io/eventfinder/',\r\n        code: 'https://github.com/laureac/eventfinder'\r\n    },\r\n    {\r\n        id: 'Corona Tracker',\r\n        text: 'Made during the Corona lock down. Used API and Chart.js',\r\n        img: tracker,\r\n        link: 'https://laureac.github.io/chart/',\r\n        code: 'https://github.com/laureac/chart'\r\n    },\r\n    {\r\n        id: '3D Guitar',\r\n        text: 'Exemple of a simple use of Three.js, and 3D objects.',\r\n        img: guitar,\r\n        link: 'https://laureac.github.io/3d-animation/',\r\n        code: 'https://github.com/laureac/3d-animation'\r\n    },\r\n    {\r\n        id: 'Meditation App',\r\n        text: 'My first app made with React. The illustration is made by me on illustrator. And it allows me to learn how to manipulate Howler.js as well.',\r\n        img: meditation,\r\n        link: 'https://laureac.github.io/meditation-app/',\r\n        code: 'https://github.com/laureac/meditation-app'\r\n    }]\r\n    return (\r\n        <div className='projects'>\r\n            <div className='title'>\r\n                <h2>Projects.</h2>\r\n                <p>Most of the projects are personal projects made with React.</p>\r\n            </div>\r\n            <div className='grid'>\r\n                {projects.map((project)=>(\r\n                    <div key={project.id} className='project'>\r\n                        <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <img className='image' src={project.img} alt={project.id}/>\r\n                        </a>\r\n                        <h3>{project.id}</h3>\r\n                        <p>{project.text}</p>\r\n                        <a title=\"link to code\" href={project.code} target=\"_blank\" rel=\"noopener noreferrer\"><img className='git-icon' src={git} alt='github code'/></a>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { gsap } from \"gsap\";\nimport \"./App.scss\";\n\nimport Contact from \"./pages/Contact\";\nimport Header from \"./components/Header\";\nimport Home from \"./pages/Home\";\n\nconst routes = [\n  { path: \"/\", name: \"Home\", Component: Home },\n  { path: \"/contact\", name: \"Contact\", Component: Contact }\n];\n\nfunction App() {\n  const onEnter = node => {\n    gsap.from(\n      [node.children[0].firstElementChild, node.children[0].lastElementChild],\n      0.6,\n      {\n        y: 30,\n        delay: 0.6,\n        ease: \"power3.InOut\",\n        opacity: 0,\n        stagger: {\n          amount: 0.6\n        }\n      }\n    );\n  };\n\n  const onExit = node => {\n    gsap.to(\n      [node.children[0].firstElementChild, node.children[0].lastElementChild],\n      0.6,\n      {\n        y: -30,\n        ease: \"power3.InOut\",\n        stagger: {\n          amount: 0.2\n        }\n      }\n    );\n  };\n\n  return (\n    <>\n      <Header />\n      <div className='container'>\n        {routes.map(({ path, Component }) => (\n          <Route key={path} exact path={path}>\n            {({ match }) => (\n              <CSSTransition\n                in={match != null}\n                timeout={1200}\n                classNames='page'\n                onExit={onExit}\n                onEntering={onEnter}\n                unmountOnExit>\n                <div className='page'>\n                  <Component />\n                </div>\n              </CSSTransition>\n            )}\n          </Route>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport Title from \"../components/Title\";\r\nimport Projects from './projects/Projects';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n    <div className='inner'>\r\n        <Title \r\n         lineContent='Flawless web apps'\r\n         lineContent2='is what I make'\r\n       />\r\n        <div>\r\n        <p className='other'>\r\n          Looking for someone to join your team? My name is &nbsp;<span style={{fontWeight: \"bold\"}}>Laure Claret</span>, I have a strong background in Marketing and now I am orientating my career in the field of the Front-end Developpement. I have a good knowledge in Javascript, HTML and CSS. I use essentially React to realise my projects.\r\n          If you want to hire me right now contact me or to see some of my work&nbsp;<span style={{fontWeight: \"bold\"}}>SCROLL DOWN</span>.\r\n        </p>\r\n          <button className='black' onClick=''>Contact</button>\r\n          <button >CV</button>\r\n      </div>\r\n    </div>\r\n    <div className= 'projects'>\r\n      <Projects />\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}